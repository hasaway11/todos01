git init

git branch
- 현재 존재하는 브랜치 목록을 보여주고, 현재 작업 중인 브랜치 앞에 * 표시
- git init을 실행한 직후에는 아직 커밋이 없기 때문에, 실제로 브랜치가 존재 X
- 첫 번째 커밋을 하면 기본 브랜치(master 또는 main)가 생성

git status

git branch -M main
- github의 기본 브랜치는 main
- github를 master로 바꾸든, 현재 프로젝트를 main으로 바꾸든 해야하는데 후자가 쉽다


git remote add origin https://github.com/hasaway1/git01.git

git push -u origin main

.gitkeep 파일은 관례적으로 사용되는 이름입니다. 이 파일은 Git이 폴더를 추적할 수 있도록 하는 역할

git config --list
- 현재 설정 정보

git config user.name
git config user.email

git config --local user.name "hasaway2"
git config --local user.email "hasaway2@example.com"


git push -u origin main
- 403 오류 발생시 
	Windows: 제어판 → 자격 증명 관리자 → Windows 자격 증명에서 확인 가능.

git clone 주소


git pull

git pull --rebase origin main










1. 필수 파일 준비
Render는 requirements.txt 또는 pyproject.toml을 통해 필요한 패키지를 설치합니다.

1.1 requirements.txt 생성
아래 명령어를 실행하여 프로젝트에서 사용하는 패키지를 정리합니다.

sh
복사
편집
pip freeze > requirements.txt
Flask와 Jinja2가 포함되어 있는지 확인하세요.
예시:

nginx
복사
편집
Flask
Jinja2
gunicorn
1.2 start.sh (옵션)
Render는 기본적으로 gunicorn을 사용하여 Flask 앱을 실행하는 것이 일반적입니다.
아래와 같이 실행 스크립트를 만들 수도 있습니다.

sh
복사
편집
#!/bin/bash
gunicorn -w 4 -b 0.0.0.0:5000 app:app
여기서 app:app은 app.py 파일의 Flask 인스턴스를 가리킵니다. (app.py 파일 내부에 app = Flask(__name__)가 있어야 함)

1.3 Procfile (옵션)
Procfile을 사용하면 Render가 실행할 명령어를 지정할 수 있습니다.

plaintext
복사
편집
web: gunicorn app:app
2. GitHub에 코드 푸시
Render는 GitHub 저장소에서 코드를 자동으로 배포할 수 있습니다.

sh
복사
편집
git init
git add .
git commit -m "Initial commit"
git branch -M main
git remote add origin https://github.com/사용자이름/저장소이름.git
git push -u origin main
3. Render에서 배포 설정
Render에 로그인합니다.
"New" → "Web Service" 선택
"Connect a repository"에서 GitHub 저장소를 선택
배포 설정 입력:
Environment: Python
Build Command: pip install -r requirements.txt
Start Command: gunicorn app:app
"Create Web Service" 클릭하면 배포가 시작됩니다.
4. 배포 완료 후 확인
배포가 끝나면 Render에서 제공하는 URL로 접근하여 Flask 애플리케이션이 정상적으로 실행되는지 확인합니다.

추가 사항
.env 파일을 사용하여 환경 변수를 관리할 수 있습니다.
Flask의 debug=True는 개발 환경에서만 사용하고, 배포 시에는 False로 설정해야 합니다.
Render 무료 플랜은 일정 시간 후 앱이 슬립 상태가 될 수 있습니다.
이 방식대로 따라 하면 Flask + Jinja2 기반 프로젝트를 Render에 쉽게 배포할 수 있습니다. 🚀